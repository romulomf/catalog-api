// <auto-generated />
using System;
using CatalogApi.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CatalogApi.Migrations
{
    [DbContext(typeof(CatalogApiDbContext))]
    [Migration("20250210233138_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CatalogApi.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(MAX)")
                        .HasColumnName("IMAGE_URL");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(MAX)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.ToTable("CATEGORIES");
                });

            modelBuilder.Entity("CatalogApi.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CATEGORY_ID")
                        .HasColumnType("INT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(MAX)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(MAX)")
                        .HasColumnName("IMAGE_URL");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(MAX)")
                        .HasColumnName("NAME");

                    b.Property<decimal>("Price")
                        .HasColumnType("SMALLMONEY")
                        .HasColumnName("PRICE");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("SMALLDATETIME")
                        .HasColumnName("REGISTER_DATE");

                    b.Property<decimal>("Stock")
                        .HasColumnType("DECIMAL(10,2)")
                        .HasColumnName("STOCK");

                    b.HasKey("Id");

                    b.HasIndex("CATEGORY_ID")
                        .HasDatabaseName("IX_CATEGORY_ID");

                    b.ToTable("PRODUCTS");
                });

            modelBuilder.Entity("CatalogApi.Models.Product", b =>
                {
                    b.HasOne("CatalogApi.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CATEGORY_ID")
                        .HasConstraintName("FK_CATEGORY_ID");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("CatalogApi.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
